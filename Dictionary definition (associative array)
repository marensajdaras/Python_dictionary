Here I want to make a brief summary for the association of the term "dictionary" with "associative array".

Arrays are a collections of elements, each identified by at least one array index or key.
Association mean a connection or relationship between things.
Associative arrays are basically objects where indexes are replaced by user-defined keys.They do not have a length property like a normal array and cannot be traversed using a normal for loop.
When I say normal array I mean lists or tuples.
Python does not have build-in support for arrays , so everything I said above you must use it as a description for what I am going to explain now. 
But Python provide lists , that are arrays indeed.(Lists = Arrays)
In computer science , an associative array is an abstract data type composed of a collection of (key,value) pairs, such that each possible key appears at most once in the collection .
So in this collection we have only one key , keys are unique. 
For example:
maren = {'language used:' : 'Python', 'quality:' : 'expert'}
'language used:' and 'quality:' are keys and they can be only once in this dictionary.
Values are 'Python' and 'expert'
We can see a connection here between keys and values. 
And this connection is the reason why we call dictionaries associative arrays.(Look at the explanation at the start of this text)
(Dictionaries = Associative arrays)
In an associative array, the association between a key and a value is oftern known as a "mapping" , and the same word mapping may also be used to refer to the process of creating a new association.
Operations used in dictionaries are :
1) Add or insert:
maren['prefered website'] = 'github'
With this statement we have added an new item in dictionary. An item is an pair(key:value).
So if we say  it in a different way we have mapped the new key to its new value.
2) Reassign:
maren['quality'] = 'good not expert'
With this statement we have reassign the value of the particular key.
We have mapped an existing key to a new value.
3) Remove or delete:
To remove we can use the methods pop() popitem() del and clear().
pop() will have the key as an argument and will delete the item , also it will return the value .
maren.pop('quality') # if we use print() here we will get 'good not expert'
if we use popitem() we will have to put the particular item as an argument 
maren.popitem('prefered website') # if we use print() here we will get the item 'prefered website' : 'github'
we can use del to delete items or entire dictionary 
del  maren # if we use print(maren) we will see an error cause maren dictionary no longer exist 
we can use clear() to delete all items 
maren.clear() # if we use print() function we will see that there is only an {} empty dictionary 
4) Lookup:
Lookup is searching for a value in dictionary 
We do that by using keys
Use square brackets:
print(maren['language used:'])    # use print() statement to check the result in interactive shell and the result will be the value of the particular key
Use the get method:
print(maren.get('quality'))
If you use as an argument an non-existent key then the method will throw an error.




